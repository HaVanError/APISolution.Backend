// <auto-generated />
using System;
using APISolution.Database.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APISolution.Database.Migrations
{
    [DbContext(typeof(DdConnect))]
    partial class DdConnectModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APISolution.Database.Entity.ResfreshToken", b =>
                {
                    b.Property<int>("IdToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdToken"));

                    b.Property<string>("Accesstoken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resfreshtoken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idUser")
                        .HasColumnType("int");

                    b.HasKey("IdToken");

                    b.HasIndex("idUser")
                        .IsUnique();

                    b.ToTable("ResfreshTokens");
                });

            modelBuilder.Entity("APISolution.Database.Entity.Role", b =>
                {
                    b.Property<int>("idRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRole"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("idRole");

                    b.HasIndex("idRole", "NameRole");

                    b.ToTable("Quyen", (string)null);
                });

            modelBuilder.Entity("APISolution.Database.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("200");

                    b.Property<string>("City")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("100");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("50");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRole")
                        .IsUnique();

                    b.ToTable("UserInformation", (string)null);
                });

            modelBuilder.Entity("APISolution.Database.Entity.ResfreshToken", b =>
                {
                    b.HasOne("APISolution.Database.Entity.User", "User")
                        .WithOne("ResfreshToken")
                        .HasForeignKey("APISolution.Database.Entity.ResfreshToken", "idUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("APISolution.Database.Entity.User", b =>
                {
                    b.HasOne("APISolution.Database.Entity.Role", "Role")
                        .WithOne("User")
                        .HasForeignKey("APISolution.Database.Entity.User", "IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("APISolution.Database.Entity.Role", b =>
                {
                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("APISolution.Database.Entity.User", b =>
                {
                    b.Navigation("ResfreshToken")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
